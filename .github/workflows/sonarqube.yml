name: Deploy

on:
  push:
    branches:
      - master
      - main
  pull_request:
    branches:
      - master
      - main
    types: [opened, synchronize, reopened]
  release:
    types: [created]

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Java 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build Project with Maven
        run: |
          echo "Construindo o projeto..."
          mvn clean install

  test:
    runs-on: ubuntu-22.04
    needs: build
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Java 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Run Tests
        run: |
          mvn test

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: target/site/jacoco/jacoco.xml

  sonar:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Java 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build and analyze with SonarQube
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_ORG: miltonrubro
        run: |
          mvn clean verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
            -Dsonar.projectKey=MILTONRUBRO_api-ms-client\
            -Dsonar.organization=${{ secrets.SONAR_ORG }} \
            -Dsonar.token=${{ secrets.SONAR_TOKEN }}

  check_coverage:
    runs-on: ubuntu-latest
    needs: sonar
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: SonarQube Quality Gate Check
        run: |
          sonar_status=$(curl -s -u ${{ secrets.SONAR_TOKEN }} "https://sonarcloud.io/api/qualitygates/project_status?projectKey=MILTONRUBRO_api-ms-client")
          
          quality_gate_status=$(echo $sonar_status | jq -r '.projectStatus.status')
          
          if [ "$quality_gate_status" != "OK" ]; then
            echo "SonarQube Quality Gate failed: Coverage is below 70%" && exit 1
          else
            echo "SonarQube Quality Gate passed!"
          fi

  deploy_pre:
    runs-on: ubuntu-22.04
    needs: sonar
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4

      - name: Configurar variáveis no Heroku
        run: |
          heroku config:set --app production-orders
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}

      - uses: akhileshns/heroku-deploy@v3.13.15
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: "production-orders"
          heroku_email: "kaique.motta@hotmail.com"

  deploy_prod:
    runs-on: ubuntu-22.04
    needs: sonar
    if: github.event_name == 'release' && github.event.action == 'created'
    steps:
      - uses: actions/checkout@v4

      - name: Configurar variáveis no Heroku
        run: |
          # Não há configuração de MongoDB, então removemos as variáveis Mongo
          heroku config:set --app production-orders
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}

      - uses: akhileshns/heroku-deploy@v3.13.15
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: "production-orders"
          heroku_email: "kaique.motta@hotmail.com"
